//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IBBAV.WsTransaccion {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsTransaccionSoap", Namespace="http://tempuri.org/")]
    public partial class WsTransaccion : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AcumuladorTransVerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcumuladorTransAddUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsTransaccion() {
            this.Url = global::IBBAV.Properties.Settings.Default.IBBAV_WsTransaccion_WsTransaccion;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AcumuladorTransVerifyCompletedEventHandler AcumuladorTransVerifyCompleted;
        
        /// <remarks/>
        public event AcumuladorTransAddUpdateCompletedEventHandler AcumuladorTransAddUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AcumuladorTransVerify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AcumuladorTransVerify(long AF_Id, decimal AC_Monto, int MD_Cod, string MD_CodTrans) {
            object[] results = this.Invoke("AcumuladorTransVerify", new object[] {
                        AF_Id,
                        AC_Monto,
                        MD_Cod,
                        MD_CodTrans});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AcumuladorTransVerifyAsync(long AF_Id, decimal AC_Monto, int MD_Cod, string MD_CodTrans) {
            this.AcumuladorTransVerifyAsync(AF_Id, AC_Monto, MD_Cod, MD_CodTrans, null);
        }
        
        /// <remarks/>
        public void AcumuladorTransVerifyAsync(long AF_Id, decimal AC_Monto, int MD_Cod, string MD_CodTrans, object userState) {
            if ((this.AcumuladorTransVerifyOperationCompleted == null)) {
                this.AcumuladorTransVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcumuladorTransVerifyOperationCompleted);
            }
            this.InvokeAsync("AcumuladorTransVerify", new object[] {
                        AF_Id,
                        AC_Monto,
                        MD_Cod,
                        MD_CodTrans}, this.AcumuladorTransVerifyOperationCompleted, userState);
        }
        
        private void OnAcumuladorTransVerifyOperationCompleted(object arg) {
            if ((this.AcumuladorTransVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcumuladorTransVerifyCompleted(this, new AcumuladorTransVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AcumuladorTransAddUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AcumuladorTransAddUpdate(long AF_Id, decimal AC_Monto, int MD_Cod, string MD_CodTrans) {
            object[] results = this.Invoke("AcumuladorTransAddUpdate", new object[] {
                        AF_Id,
                        AC_Monto,
                        MD_Cod,
                        MD_CodTrans});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AcumuladorTransAddUpdateAsync(long AF_Id, decimal AC_Monto, int MD_Cod, string MD_CodTrans) {
            this.AcumuladorTransAddUpdateAsync(AF_Id, AC_Monto, MD_Cod, MD_CodTrans, null);
        }
        
        /// <remarks/>
        public void AcumuladorTransAddUpdateAsync(long AF_Id, decimal AC_Monto, int MD_Cod, string MD_CodTrans, object userState) {
            if ((this.AcumuladorTransAddUpdateOperationCompleted == null)) {
                this.AcumuladorTransAddUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcumuladorTransAddUpdateOperationCompleted);
            }
            this.InvokeAsync("AcumuladorTransAddUpdate", new object[] {
                        AF_Id,
                        AC_Monto,
                        MD_Cod,
                        MD_CodTrans}, this.AcumuladorTransAddUpdateOperationCompleted, userState);
        }
        
        private void OnAcumuladorTransAddUpdateOperationCompleted(object arg) {
            if ((this.AcumuladorTransAddUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcumuladorTransAddUpdateCompleted(this, new AcumuladorTransAddUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void AcumuladorTransVerifyCompletedEventHandler(object sender, AcumuladorTransVerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcumuladorTransVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcumuladorTransVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void AcumuladorTransAddUpdateCompletedEventHandler(object sender, AcumuladorTransAddUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcumuladorTransAddUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcumuladorTransAddUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591